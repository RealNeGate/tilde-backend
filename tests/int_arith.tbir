# tests out integer arithmatic in all scalar types
def T [i8]

fn [T] add {
	a = [T] param
	b = [T] param
	c = [T] + a b
	ret c
}

fn [T] sub {
	a = [T] param
	b = [T] param
	c = [T] - a b
	ret c
}

fn [T] rsub {
	a = [T] param
	b = [T] param
	c = [T] - b a
	ret c
}

fn [T] mul {
	a = [T] param
	b = [T] param
	c = [T] * a b
	ret c
}

fn [T] div {
	a = [T] param
	b = [T] param
	c = [T] / a b
	ret c
}

fn [T] div2 {
	a = [T] param
	b = [T] 2
	c = [T] / a b
	ret c
}

fn [T] mul2 {
	a = [T] param
	b = [T] 2	
	c = [T] * a b
	ret c
}
